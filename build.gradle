/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
   	dependencies {
        // provides javafx-gradle-plugin
       // classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: "8.8.2"
        // provides proguard.gradle.ProGuardTask (including all requirements)
        classpath 'net.sf.proguard:proguard-gradle:6.0.2'
    }
}

plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    id "io.franzbecker.gradle-lombok" version "3.1.0"
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { url 'http://repo.runelite.net' }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'runelite/http-api/src/main/java'
            srcDir 'runelite/runelite-api/src/main/java'
            srcDir 'runelite/runelite-client/src/main/java'
        }
        resources {
            srcDir 'runelite/http-api/src/main/resources'
            srcDir 'runelite/runelite-client/src/main/resources'
        }
    }
}

dependencies {
    compile group: 'org.slf4j', name:'slf4j-api', version: '1.7.25'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3' 
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

    // Runelite dependencies below
    compile group: 'net.runelite.pushingpixels', name: 'trident', version: '1.5.00'
    compile group: 'net.runelite.pushingpixels', name: 'substance', version: '8.0.02'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.4'
    compile group: 'com.google.inject', name: 'guice', version: '4.2.2'
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.3.0'
   // compile group: 'com.google.collections', name: 'google-collections', version: '1.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile group: 'org.apache.commons', name: 'commons-csv', version: '1.7'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '5.0.4'
    compile group: 'com.massisframework', name: 'orange-extensions', version: '1.3.1'
    compile "net.runelite:discord:1.1"

}

task createStandardJar(type: Jar) {
    from (sourceSets.main.output) {
        archiveName = "NotObfuscatedClient.jar"
        manifest {
            attributes(
                    'Main-Class': 'com.client.Client',
            )
        }
        from configurations.compile.collect { it.isDirectory() ? it : zipTree(it).matching{ exclude{it.name.contains('MANIFEST.MF') } } }
    }
}

task createRuneliteJar(type: Jar) {
    from (sourceSets.main.output) {
        archiveName = "NotObfuscatedRunelite.jar"
        manifest {
            attributes(
                    'Main-Class': 'net.runelite.client.RuneLite',
            )
        }
        from configurations.compile.collect { it.isDirectory() ? it : zipTree(it).matching{ exclude{it.name.contains('MANIFEST.MF') } } }
    }
}

task obfuscateStandard(type: proguard.gradle.ProGuardTask) {
    configuration 'proguard.conf'

    configurations.runtime.resolve().each {
        libraryjars file(it.getAbsolutePath())
    }

    injars 'build/libs/NotObfuscatedClient.jar'
    outjars 'build/libs/deploy/ObfuscatedClient.jar'
}

task obfuscateRunelite(type: proguard.gradle.ProGuardTask) {
    configuration 'proguard.conf'

    configurations.runtime.resolve().each {
        libraryjars file(it.getAbsolutePath())
    }

    injars 'build/libs/NotObfuscatedRunelite.jar'
    outjars 'build/libs/deploy/ObfuscatedRunelite.jar'
}

task buildJars {
    dependsOn 'createStandardJar'
    dependsOn 'createRuneliteJar'
    dependsOn 'obfuscateStandard'
    dependsOn 'obfuscateRunelite'
}

lombok { // optional: values below are the defaults
    version = "1.18.8"
    sha256 = ""
}


